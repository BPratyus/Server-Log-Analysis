/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package serverloganalysis;

import com.mongodb.BasicDBObject;
import com.mongodb.MongoClient;
import com.mongodb.client.MongoDatabase;
import java.util.ArrayList;
import java.util.List;
import org.bson.Document;
import static com.mongodb.client.model.Filters.*;
import com.mongodb.client.MongoCollection;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Timer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import javax.swing.table.DefaultTableModel;




/**
 *
 * @author basul
 */
public class NewJFrame extends javax.swing.JFrame {
    
    

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
//        TableColumnModel mod = (TableColumnModel) OutputTable.getColumnModel(); 
        
        OutputTable.getColumnModel().getColumn(0).setPreferredWidth(40);
        OutputTable.getColumnModel().getColumn(1).setPreferredWidth(40);
        OutputTable.getColumnModel().getColumn(2).setPreferredWidth(100);
        OutputTable.getColumnModel().getColumn(3).setPreferredWidth(180);
        OutputTable.getColumnModel().getColumn(4).setPreferredWidth(60);
        OutputTable.getColumnModel().getColumn(5).setPreferredWidth(200);
        OutputTable.getColumnModel().getColumn(6).setPreferredWidth(50);
        OutputTable.getColumnModel().getColumn(7).setPreferredWidth(40);
        OutputTable.getColumnModel().getColumn(8).setPreferredWidth(280);
        OutputTable.getColumnModel().getColumn(9).setPreferredWidth(420);
        
        TextPanel.setVisible(true);
            DatePanel.setVisible(false);
            SizePanel.setVisible(false);
//        JSpinner timeSpinner = new JSpinner( new SpinnerDateModel() );
//        JSpinner.DateEditor timeEditor = new JSpinner.DateEditor(timeSpinner, "HH:mm:ss");
//        timeSpinner.setEditor(timeEditor);
//        timeSpinner.setValue(new Date()); // will only show the current time
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        Col = new javax.swing.JComboBox<>();
        FindBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        OutputTable = new javax.swing.JTable();
        Slider = new javax.swing.JSlider();
        Sucess = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        TextPanel = new javax.swing.JPanel();
        QueryTf = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        DatePanel = new javax.swing.JPanel();
        DateTimeL = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        DateTimeG = new javax.swing.JSpinner();
        LTE = new javax.swing.JCheckBox();
        GTE = new javax.swing.JCheckBox();
        SizePanel = new javax.swing.JPanel();
        SizeL = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        SizeG = new javax.swing.JSpinner();
        LTEN = new javax.swing.JCheckBox();
        GTEN = new javax.swing.JCheckBox();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Log Server Analysis Program");
        setAlwaysOnTop(true);
        setMinimumSize(new java.awt.Dimension(1362, 890));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel2.setText("Server Log Analysis");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 0, 440, 90));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1360, 90));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Col.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "client", "datetime", "method", "request", "status", "size", "referer", "user_agent" }));
        Col.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ColActionPerformed(evt);
            }
        });
        jPanel1.add(Col, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 121, 33));

        FindBtn.setText("Find ");
        FindBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FindBtnActionPerformed(evt);
            }
        });
        jPanel1.add(FindBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 40, 100, 30));

        OutputTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        OutputTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sno.", "ID", "Client", "Date Time", "Method", "Request", "Status", "Size", "Referer", "User Agent"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        OutputTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        OutputTable.setColumnSelectionAllowed(true);
        OutputTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        OutputTable.setRowSelectionAllowed(false);
        OutputTable.setShowGrid(true);
        OutputTable.setShowHorizontalLines(false);
        jScrollPane1.setViewportView(OutputTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, 1280, 510));

        Slider.setBackground(new java.awt.Color(255, 255, 255));
        Slider.setMajorTickSpacing(1000);
        Slider.setMaximum(11000);
        Slider.setMinimum(1000);
        Slider.setMinorTickSpacing(500);
        Slider.setPaintLabels(true);
        Slider.setPaintTicks(true);
        Slider.setPaintTrack(false);
        Slider.setSnapToTicks(true);
        Slider.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Choose no. of Entries", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));
        jPanel1.add(Slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 20, 380, 70));

        Sucess.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Sucess.setForeground(new java.awt.Color(102, 255, 102));
        Sucess.setText("Welcome Back!");
        jPanel1.add(Sucess, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 150, 320, 40));

        jLayeredPane1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TextPanel.setBackground(new java.awt.Color(255, 255, 255));
        TextPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        QueryTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QueryTfActionPerformed(evt);
            }
        });
        TextPanel.add(QueryTf, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 310, 40));

        jLabel3.setText("Enter Query :");
        TextPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 84, 25));

        jLayeredPane1.add(TextPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 430, 100));

        DatePanel.setBackground(new java.awt.Color(255, 255, 255));

        DateTimeL.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(1548148080000L), new java.util.Date(1548148080000L), new java.util.Date(1548150300000L), java.util.Calendar.MINUTE));

        jLabel4.setText("Choose Time:");

        DateTimeG.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(1548148080000L), new java.util.Date(1548148080000L), new java.util.Date(1548150300000L), java.util.Calendar.MINUTE));

        LTE.setSelected(true);
        LTE.setText("Less than/Equal");
        LTE.setContentAreaFilled(false);

        GTE.setText("Greater than/Equal");
        GTE.setContentAreaFilled(false);
        GTE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GTEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DatePanelLayout = new javax.swing.GroupLayout(DatePanel);
        DatePanel.setLayout(DatePanelLayout);
        DatePanelLayout.setHorizontalGroup(
            DatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DatePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(GTE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(DatePanelLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(LTE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(DatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DateTimeL, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DateTimeG, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(76, 76, 76))
        );
        DatePanelLayout.setVerticalGroup(
            DatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DatePanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(DatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(DatePanelLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(GTE))
                    .addComponent(DateTimeG, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(DatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LTE, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DateTimeL, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jLayeredPane1.add(DatePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 410, 120));

        SizePanel.setBackground(new java.awt.Color(255, 255, 255));

        SizeL.setModel(new javax.swing.SpinnerNumberModel(1000, 100, 10000, 100));

        jLabel5.setText("Choose Size:");

        SizeG.setModel(new javax.swing.SpinnerNumberModel(100, 100, 1000, 100));

        LTEN.setSelected(true);
        LTEN.setText("Less than/Equal");
        LTEN.setContentAreaFilled(false);

        GTEN.setText("Greater than/Equal");
        GTEN.setContentAreaFilled(false);
        GTEN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GTENActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SizePanelLayout = new javax.swing.GroupLayout(SizePanel);
        SizePanel.setLayout(SizePanelLayout);
        SizePanelLayout.setHorizontalGroup(
            SizePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SizePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SizePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(GTEN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(SizePanelLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(LTEN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(SizePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SizeL, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SizeG, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(76, 76, 76))
        );
        SizePanelLayout.setVerticalGroup(
            SizePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SizePanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(SizePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(SizePanelLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(GTEN))
                    .addComponent(SizeG, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(SizePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LTEN, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SizeL, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jLayeredPane1.add(SizePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 420, 120));

        jPanel1.add(jLayeredPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, 430, 140));

        jButton2.setText("Refresh");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 30, 90, 40));

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Choose field");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 150, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/serverloganalysis/Influenza.jpg"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 1360, 700));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel7.setText("NoSQL Project 2023");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 710, 240, 30));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel8.setText("By Pratyus Basuli 20BCR7076");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 710, 330, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 90, 1370, 810));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
     
    public static MongoDatabase getDBConnection(){

//        Logger monLogger = Logger.getLogger("org.mongodb.driver");
//        monLogger.setLevel(Level.SEVERE);
            MongoClient mongo = new MongoClient("localhost",27017);
                MongoDatabase db=mongo.getDatabase("Project");
                System.out.println("Connected");
                return db;
            
    }
     
        MongoDatabase db = getDBConnection();
        MongoCollection<Document> docs = db.getCollection("ServerLog");
        
                void UpdateTable(List<Document> Query){
            DefaultTableModel mod = (DefaultTableModel) OutputTable.getModel(); 
            List<bean> lst=new ArrayList<bean>();
            for (Document p : Query) {
                // System.out.println(p.toJson());
                bean b= new bean();
                b.setsno(Integer.parseInt(p.get("sno").toString()));
                b.setclient(p.get("client").toString());
                b.setdateTime(p.get("datetime").toString());
                b.setmethod((p.get("method").toString()));
                b.setrequest(p.get("request").toString());
                b.setstatus(p.get("status").toString());
                b.setsize(Integer.parseInt(p.get("size").toString()));
                b.setreferer(p.get("referer").toString());
                b.setuseragent(p.get("user_agent").toString());
                lst.add(b);
            };
            int i=1;
            for(bean b:lst){
                mod.addRow(new Object[]{i,b.sno,b.client,b.dateTime,b.method,b.request,b.status,b.size,b.referer,b.useragent});
                i++;
            }
        }
                
        void ClearTable(){
            DefaultTableModel mod = (DefaultTableModel) OutputTable.getModel(); 
            { int row=mod.getRowCount();
                if (row>0)
                {for(int i=0;i<row;i++)
                    mod.removeRow(0);
                }//clears the table in history tab
          }
        }
        
        void SearchAll(){
         List<Document> Query = docs.find().limit(Slider.getValue()).into(new ArrayList<>());
//       System.out.println(Query);
         ClearTable();
         UpdateTable(Query);
        
        }
        
        void SearchQueryString(String col,String val){
            List<Document> Query = docs.find(
                    regex(col,val,"i")
            ).limit(Slider.getValue()).into(new ArrayList<>());
            
             ClearTable();
            UpdateTable(Query);
        }
        
        //            String dateStr = "2019-01-22 09:08:28.000 UTC";
//            Date date = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS ZZZ").parse(dateStr);
//            System.out.println(date);
//            BasicDBObject filter = new BasicDBObject("datetime", date);
//            coll.find(filter);
        
        void SearchQueryDateBound() {
            

            List<Document> Query = docs.find(and(
                    gte("datetime",DateTimeG.getValue()),
                    lte("datetime",DateTimeL.getValue())
            )).limit(Slider.getValue()).into(new ArrayList<>());
            
             ClearTable();
            UpdateTable(Query);
        }
        
        void SearchQueryDateGTE() {
            
            List<Document> Query = docs.find(
                    gte("datetime",DateTimeG.getValue())
            ).limit(Slider.getValue()).into(new ArrayList<>());
            
             ClearTable();
            UpdateTable(Query);
        }
        void SearchQueryDateLTE() {
            
            List<Document> Query = docs.find(
                    lte("datetime",DateTimeL.getValue())
            ).limit(Slider.getValue()).into(new ArrayList<>());
            
             ClearTable();
            UpdateTable(Query);
        }
        void SearchQueryNumBound() {
            

            List<Document> Query = docs.find(and(
                    gte("size",SizeG.getValue()),
                    lte("size",SizeL.getValue())
            )).limit(Slider.getValue()).into(new ArrayList<>());
            
             ClearTable();
            UpdateTable(Query);
        }
        
        void SearchQueryNumGTE() {
            
            List<Document> Query = docs.find(
                    gte("size",SizeG.getValue())
            ).limit(Slider.getValue()).into(new ArrayList<>());
            
             ClearTable();
            UpdateTable(Query);
        }
        void SearchQueryNumLTE() {
            
            List<Document> Query = docs.find(
                    lte("size",SizeL.getValue())
            ).limit(Slider.getValue()).into(new ArrayList<>());
            
             ClearTable();
            UpdateTable(Query);
        }
        
        

        
         
    private void ColActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ColActionPerformed
        // TODO add your handling code here:
        int index = Col.getSelectedIndex();
        
        if(index==1){
            
            TextPanel.setVisible(false);
            DatePanel.setVisible(true);
            SizePanel.setVisible(false);
        }
        else if(index==5){
            TextPanel.setVisible(false);
            DatePanel.setVisible(false);
            SizePanel.setVisible(true);
        }
        else{
            
            TextPanel.setVisible(true);
            DatePanel.setVisible(false);
            SizePanel.setVisible(false);
            
        }
        
        
    }//GEN-LAST:event_ColActionPerformed

    private void QueryTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QueryTfActionPerformed
        // TODO add your handling code here:
        FindBtnActionPerformed(evt);
    }//GEN-LAST:event_QueryTfActionPerformed

    private void FindBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FindBtnActionPerformed
        // TODO add your handling code here:
        String col = Col.getSelectedItem().toString();
        int index = Col.getSelectedIndex();
        String val = QueryTf.getText();
        
        if(index==1){
            
            if(LTE.isSelected())
                SearchQueryDateLTE();
            else if(GTE.isSelected())
                SearchQueryDateGTE();
            else if(LTE.isSelected() && GTE.isSelected())
                SearchQueryDateBound();
                
//            DateTimeL.getValue();
            
        }    
        else if(index==5){
            
            if(LTEN.isSelected())
                SearchQueryNumLTE();
            else if(GTEN.isSelected())
                SearchQueryNumGTE();
            else if(LTEN.isSelected() && GTEN.isSelected())
                SearchQueryNumBound();
            
        }
        else{
          SearchQueryString(col, val);      
        }
        
        Sucess.setText("Recieved Data Sucessfully");
        
        
        

    }//GEN-LAST:event_FindBtnActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:

    }//GEN-LAST:event_formWindowActivated

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        SearchAll();
        Sucess.setText("");
        QueryTf.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        SearchAll();
    }//GEN-LAST:event_formWindowOpened

    private void GTEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GTEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GTEActionPerformed

    private void GTENActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GTENActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GTENActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Col;
    private javax.swing.JPanel DatePanel;
    private javax.swing.JSpinner DateTimeG;
    private javax.swing.JSpinner DateTimeL;
    private javax.swing.JButton FindBtn;
    private javax.swing.JCheckBox GTE;
    private javax.swing.JCheckBox GTEN;
    private javax.swing.JCheckBox LTE;
    private javax.swing.JCheckBox LTEN;
    private javax.swing.JTable OutputTable;
    private javax.swing.JTextField QueryTf;
    private javax.swing.JSpinner SizeG;
    private javax.swing.JSpinner SizeL;
    private javax.swing.JPanel SizePanel;
    private javax.swing.JSlider Slider;
    private javax.swing.JLabel Sucess;
    private javax.swing.JPanel TextPanel;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
